{"version":3,"sources":["components/Header.js","components/PopupWithForm.js","components/ImagePopup.js","components/Card.js","utils/api.js","components/Main.js","components/Footer.js","components/App.js","serviceWorker.js","index.js","images/logo_white.svg"],"names":["Header","className","src","logo","alt","PopupWithForm","props","name","isOpen","noValidate","type","onClick","onClose","title","children","ImagePopup","card","style","backgroundImage","link","Card","cardData","onCardClick","likes","length","api","data","this","_baseUrl","baseUrl","_authorizationNumber","authorizationNumber","fetch","headers","authorization","then","_returnErrorResponse","newUserName","newUserDescription","method","body","JSON","stringify","about","newCardName","newCardLink","avatarLink","avatar","cardId","res","ok","json","Promise","reject","status","Main","React","useState","userName","setUserName","userDescription","setIUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getUserInfo","userInfoData","catch","console","error","getInitialCards","cardsInfoData","Array","from","onEditAvatar","onEditProfile","onAddPlace","map","key","_id","isEditProfilePopupOpen","id","placeholder","pattern","required","minLength","maxLength","isEditAvatarPopupOpen","isAddPlacePopupOpen","Footer","App","setIsEditProfilePopupOpen","setIsAddPlacePopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.f7fd00fc.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/logo_white.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header\"> \n    <img className= \"header__logo\" src={logo} alt=\"Логотип Mesto.\" />\n  </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction PopupWithForm(props) {\n    return (\n      <section className={`popup popup-with-form popup_type_${props.name} ${props.isOpen && 'popup_opened'}`}>  \n        <form name={`${props.name}`} className={`popup__container popup__container_for-form popup__container_type_${props.name}`} noValidate>  \n          <button className=\"popup__close-button\" type=\"button\" onClick={props.onClose}></button> \n          <p className=\"popup__title\">{props.title}</p> \n          <fieldset className=\"popup__list\"> \n            {props.children}\n          </fieldset>\n        </form> \n        </section> \n    );\n  }\n\n  export default PopupWithForm","import React from 'react';\n\nfunction ImagePopup(props) { \n  return (\n    <section className={`popup popup_image ${props.card !== null && 'popup_opened'}`}>\n      <div className=\"popup__container\">  \n        <button className=\"popup__close-button\" type=\"button\" onClick={props.onClose}></button> \n        <div className=\"popup__image\" style={{ backgroundImage: `url(${props.card !== null && props.card.link})` }}  > </div>\n        <p className=\"popup__title popup__title_for-image\">{props.card !== null && props.card.name}</p> \n      </div> \n    </section> \n  );\n}\n\nexport default ImagePopup;\n","import React from 'react';\n\nfunction Card(props) {\n  function handleClick () {\n    props.onCardClick({\n      name: props.cardData.name,\n      link: props.cardData.link\n    });\n  }\n\n  return (\n    <article className=\"card\">\n        <button className=\"card__remove-button\" type=\"button\"></button>\n        <div className=\"card__image\" style={{ backgroundImage: `url(${props.cardData.link})` }} onClick={handleClick}></div>\n        <p className=\"card__name\">{props.cardData.name}</p>\n        <div className=\"card__like-block\">\n          <button className=\"card__like-button\" type=\"button\"></button>\n          <p className=\"card__like-amount\">{props.cardData.likes.length}</p>\n        </div>\n      </article>\n  );\n}\n\nexport default Card;","class Api {\n  constructor(data) {\n    this._baseUrl = data.baseUrl\n    this._authorizationNumber = data.authorizationNumber\n  }\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {headers: {\n      authorization: this._authorizationNumber\n      }\n    })\n    .then(this._returnErrorResponse)\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {headers: {\n      authorization: this._authorizationNumber\n      }\n    })\n    .then(this._returnErrorResponse)\n  }\n  \n  patchUserInfo(newUserName, newUserDescription) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._authorizationNumber,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: newUserName,\n        about: newUserDescription\n      })\n    })\n    .then(this._returnErrorResponse)\n  }\n  \n  postNewCard (newCardName, newCardLink) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._authorizationNumber,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: newCardName,\n        link: newCardLink\n      })\n    })\n  .then(this._returnErrorResponse)\n  }\n\n  patchAvatar(avatarLink) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._authorizationNumber,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: avatarLink\n      })\n    })\n    .then(this._returnErrorResponse)\n  }\n\n  putLike (cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._authorizationNumber\n        }\n    })\n  .then(this._returnErrorResponse)\n  }\n\n  deleteLike (cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._authorizationNumber\n        }\n    })\n  .then(this._returnErrorResponse)\n  }\n\n  deleteCard (cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._authorizationNumber\n        }\n    })\n  .then(this._returnErrorResponse)\n  }\n\n  _returnErrorResponse(res) {\n    if (res.ok) {\n      return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\n  authorizationNumber: '700729c8-6f90-4ed7-bfdf-eebcd18bcb3c'\n})\n\nexport default api;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport Card from './Card';\nimport api from '../utils/api';\n\nfunction Main(props) {\n  const [userName, setUserName] = React.useState('');\n  const [userDescription, setIUserDescription] = React.useState('');\n  const [userAvatar, setUserAvatar] = React.useState('');\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    api.getUserInfo()\n    .then((userInfoData) => {\n      setUserName(userInfoData.name);\n      setIUserDescription(userInfoData.about)\n      setUserAvatar(userInfoData.avatar);\n    })\n    .catch(() => {\n      console.error('Что-то пошло не так.');\n    });\n    api.getInitialCards()\n    .then(cardsInfoData => {\n      Array.from(cardsInfoData)\n      setCards(cardsInfoData);\n    })\n    .catch(() => {\n      console.error('Что-то пошло не так.');\n    });\n  }, []);\n\n  return (\n    <main className=\"content\">\n    <section className=\"profile\">\n      <div className=\"profile__avatar-box\">\n        <div className=\"profile__avatar\" style={{ backgroundImage: `url(${userAvatar})` }}></div>\n        <button className=\"profile__avatar-edit-button\" onClick={props.onEditAvatar}></button>\n      </div>\n      <div className=\"profile__info\">\n        <div className=\"profile__first-line\"> \n          <p className=\"profile__name\">{userName}</p>\n          <button className=\"profile__edit-button\" type=\"button\" onClick={props.onEditProfile}></button>\n        </div>\n        <p className=\"profile__description\">{userDescription}</p>\n      </div>\n      <button className=\"profile__add-button\" type=\"button\" onClick={props.onAddPlace}></button>\n    </section>\n\n    <section className=\"cards\">\n      {cards.map(card =>\n      <Card cardData ={card} onCardClick={props.onCardClick} key = {card._id}/>\n      )}\n    </section>\n\n    <PopupWithForm name=\"profile\" title=\"Редактировать профиль\" isOpen={props.isEditProfilePopupOpen} onClose={props.onClose}>  \n      <input id=\"name-input\" type=\"text\" className=\"popup__input\" name=\"name\" placeholder=\"Имя\" pattern=\"[a-zA-Zа-яА-Я\\s\\-]+\" required minLength=\"2\" maxLength=\"40\" /> \n      <span id=\"name-input-error\" className=\"popup__input-error\"></span>\n      <input id=\"description-input\" type=\"text\" className=\"popup__input\" name=\"description\" placeholder=\"Описание\" required minLength=\"2\" maxLength=\"200\" /> \n      <span id=\"description-input-error\" className=\"popup__input-error\"></span>\n      <button type=\"submit\" className=\"popup__save-button\">Сохранить</button> \n    </PopupWithForm> \n\n    <PopupWithForm name=\"avatar\" title=\"Обновить аватар\" isOpen={props.isEditAvatarPopupOpen} onClose={props.onClose}>\n      <input id=\"avatar-input\" type=\"url\" className=\"popup__input\" name=\"avatar\" placeholder=\"Ссылка на фотографию\" required /> \n      <span id=\"avatar-input-error\" className=\"popup__input-error\"></span>\n      <button type=\"submit\" className=\"popup__save-button\">Сохранить</button> \n    </PopupWithForm>  \n\n    <PopupWithForm name=\"newplace\" title=\"Новое место\" isOpen={props.isAddPlacePopupOpen} onClose={props.onClose}>\n      <input id=\"place-input\" type=\"text\" className=\"popup__input\" name=\"name\" placeholder=\"Название\" required minLength=\"1\" maxLength=\"30\" /> \n      <span id=\"place-input-error\" className=\"popup__input-error\"></span>\n      <input id=\"link-input\" type=\"url\" className=\"popup__input\" name=\"link\" placeholder=\"Ссылка на картинку\" required /> \n      <span id=\"link-input-error\" className=\"popup__input-error\"></span>\n      <button type=\"submit\" className=\"popup__save-button\">Создать</button> \n    </PopupWithForm> \n    \n    <PopupWithForm name=\"removeCard\" title=\"Вы уверенны?\">\n      <button type=\"submit\" className=\"popup__save-button popup__save-button_active popup__save-button_for-remove\">Да</button>\n    </PopupWithForm> \n    \n    <ImagePopup card={props.card} onClose={props.onClose} />\n\n  </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n    <p className=\"footer__copyright\"> &copy; 2020 Mesto Russia</p>\n  </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] =React.useState(null);\n  \n  function handleCardClick (card){\n    setSelectedCard({\n      name: card.name,\n      link: card.link,\n    });\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null)\n  }\n\n  return (\n   <div className=\"root\"> \n    <Header />\n    <Main \n    onEditProfile ={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} \n    onCardClick = {handleCardClick}\n    onClose={closeAllPopups}\n    isEditAvatarPopupOpen={isEditAvatarPopupOpen} isAddPlacePopupOpen={isAddPlacePopupOpen} isEditProfilePopupOpen={isEditProfilePopupOpen} \n    card={selectedCard} />\n    <Footer />\n  \n   </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo_white.e889e45f.svg\";"],"sourceRoot":""}